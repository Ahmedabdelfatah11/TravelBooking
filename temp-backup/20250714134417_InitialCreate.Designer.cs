// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBooking.Repository.Data;

#nullable disable

namespace TravelBooking.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
    [Migration("20250720125634_Initial Creation")]
    partial class InitialCreation
========
    [Migration("20250714134417_InitialCreate")]
    partial class InitialCreate
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelBooking.Core.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingType")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<string>("Description")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Location")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RentalCompanyId")
========
                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalCompanyId")
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentalCompanyId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.CarRentalCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rating")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
========
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("CarRentalCompanies");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArrivalAirport")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<int>("AvailableSeats")
========
                    b.Property<int>("AvailableBusinessSeats")
                        .HasColumnType("int");

                    b.Property<int>("AvailableFirstClassSeats")
                        .HasColumnType("int");

                    b.Property<int>("AvailableStanderedSeats")
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasColumnType("int");

                    b.Property<string>("DepartureAirport")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<int>("FlightId")
========
                    b.Property<int?>("FlightId")
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.FlightCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rating")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FlightCompanies");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.HotelCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

========
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");
========
                    b.Property<int>("Rating")
                        .HasColumnType("int");
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.HasKey("Id");

                    b.ToTable("HotelCompanies");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<int?>("BookingId")
========
                    b.Property<int>("BookingId")
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .IsUnique()
                        .HasFilter("[BookingId] IS NOT NULL");
========
                        .IsUnique();
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelId")
========
                    b.Property<int>("HotelId")
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomType")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "RoomType");
========
                        .HasColumnType("int");
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
            modelBuilder.Entity("TravelBooking.Core.Models.RoomImage", b =>
========
            modelBuilder.Entity("TravelBooking.Core.Models.TourCompany", b =>
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImage");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Tour", b =>
========
                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Trip", b =>
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
========
                    b.Property<string>("Description")
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Destination")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
========
                        .IsRequired()
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.Property<int>("MaxGuests")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

========
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TourCompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourCompanyId");

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.TourCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TourCompany");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.TourImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourImages");
========
                    b.ToTable("Trips");
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                });

            modelBuilder.Entity("TravelBooking.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Booking", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.User", "User")
                        .WithMany("bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Car", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.CarRentalCompany", "RentalCompany")
                        .WithMany("Cars")
                        .HasForeignKey("RentalCompanyId")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .OnDelete(DeleteBehavior.Cascade);
========
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.Navigation("RentalCompany");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Flight", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.FlightCompany", "FlightCompany")
                        .WithMany("Flights")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
========
                        .HasForeignKey("FlightId");
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.Navigation("FlightCompany");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Payment", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("TravelBooking.Core.Models.Payment", "BookingId")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .OnDelete(DeleteBehavior.Cascade);
========
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Room", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.HotelCompany", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
                        .OnDelete(DeleteBehavior.Cascade);
========
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs

                    b.Navigation("Hotel");
                });

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
            modelBuilder.Entity("TravelBooking.Core.Models.RoomImage", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Tour", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.TourCompany", "TourCompany")
                        .WithMany("Tours")
========
            modelBuilder.Entity("TravelBooking.Core.Models.Trip", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.TourCompany", "TourCompany")
                        .WithMany("Trips")
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                        .HasForeignKey("TourCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TourCompany");
                });

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
            modelBuilder.Entity("TravelBooking.Core.Models.TourImage", b =>
                {
                    b.HasOne("TravelBooking.Core.Models.Tour", "Tour")
                        .WithMany("TourImages")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

========
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
            modelBuilder.Entity("TravelBooking.Core.Models.Booking", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.CarRentalCompany", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.FlightCompany", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.HotelCompany", b =>
                {
                    b.Navigation("Rooms");
                });

<<<<<<<< HEAD:TravelBooking.Repository/Migrations/20250720125634_Initial Creation.Designer.cs
            modelBuilder.Entity("TravelBooking.Core.Models.Room", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.Tour", b =>
                {
                    b.Navigation("TourImages");
                });

            modelBuilder.Entity("TravelBooking.Core.Models.TourCompany", b =>
                {
                    b.Navigation("Tours");
========
            modelBuilder.Entity("TravelBooking.Core.Models.TourCompany", b =>
                {
                    b.Navigation("Trips");
>>>>>>>> ayman:TravelBooking.Repository/Migrations/20250714134417_InitialCreate.Designer.cs
                });

            modelBuilder.Entity("TravelBooking.Core.Models.User", b =>
                {
                    b.Navigation("bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
